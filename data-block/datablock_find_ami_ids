# Amazon Linux 2 AMI
data "aws_ami" "amazon_linux" {
  most_recent = true
  owners      = ["amazon"]

  filter {
    name   = "name"
    values = ["amzn2-ami-hvm-*-x86_64-gp2"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
}

# Ubuntu 22.04 LTS AMI
data "aws_ami" "ubuntu" {
  most_recent = true
  owners      = ["099720109477"] # Canonical

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
}


# Red Hat Enterprise Linux 8 AMI
data "aws_ami" "rhel" {
  most_recent = true
  owners      = ["309956199498"] # Red Hat

  filter {
    name   = "name"
    values = ["RHEL-8*-x86_64-*" ]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
}

output "amazon_linux_ami_id" {
  value = data.aws_ami.amazon_linux.id
}

output "ubuntu_ami_id" {
  value = data.aws_ami.ubuntu.id
}


output "rhel_ami_id" {
  value = data.aws_ami.rhel.id
}



------------------------------------------------------------------
Verified Publisher Account IDs:
-----------------------------------------------------------------------
OS	Publisher	Owner ID
Amazon Linux	Amazon	amazon (alias)
Ubuntu	Canonical	099720109477
RHEL               309956199498

Using these ensures:

You always get official, secure AMIs.

Terraform will correctly find the image in any region (as long as that AMI exists in that region).
