
For Debian based

sudo apt update
sudo apt install -y wget unzip
wget https://releases.hashicorp.com/vault/1.15.4/vault_1.15.4_linux_amd64.zip
unzip vault_1.15.4_linux_amd64.zip
sudo mv vault /usr/local/bin/
vault --version

vault server -dev

nohup vault server -dev > vault.log 2>&1 &

 ps aux | grep vault

export VAULT_ADDR='http://127.0.0.1:8200'
export VAULT_TOKEN='hvs.######'

vault secrets enable -path=aws kv


vault status
echo $VAULT_TOKEN



pkill vault  # kill existing vault
vault server -dev > vault.log 2>&1 &
grep 'Root Token' vault.log


vault kv put aws/access_key access_key=YOUR_AWS_ACCESS_KEY secret_key=YOUR_AWS_SECRET_KEY

vault kv get aws/access_key

vault kv get aws/creds

Create a vault provider in Terraform so it can talk to Vault and read secrets.
provider "vault" {
  address = "http://127.0.0.1:8200"
  token   = "hvs#####l"  # your root or appropriate token
}

Fetch AWS Credentials from Vault Using vault_generic_secret
Use a Terraform data source to read the secret from Vault:

data "vault_generic_secret" "aws_creds" {
  path = "aws/creds"
}


Use These Secrets in AWS Provider
Then, use the retrieved secrets in the AWS provider block:

provider "aws" {
  region     = "us-east-1"
  access_key = data.vault_generic_secret.aws_creds.data["access_key"]
  secret_key = data.vault_generic_secret.aws_creds.data["secret_key"]
}




For RPM based

sudo yum update -y
sudo yum install -y wget unzip
wget https://releases.hashicorp.com/vault/1.15.4/vault_1.15.4_linux_amd64.zip
unzip vault_1.15.4_linux_amd64.zip
sudo mv vault /usr/local/bin/
vault --version


Step 2: Start Vault Server (Dev Mode)

vault server -dev

This will output a root token and local address (usually: http://127.0.0.1:8200)


Step 3: Export Environment Variables
Open a new terminal and export:

export VAULT_ADDR='http://127.0.0.1:8200'
export VAULT_TOKEN='paste_your_token_here'


Step 4: Store AWS Credentials
vault kv put secret/aws access_key=YOUR_ACCESS_KEY secret_key=YOUR_SECRET_KEY
vault kv get secret/aws



 Step 5: Use in Terraform
Refer to this minimal setup:

provider "vault" {}

data "vault_kv_secret_v2" "aws_creds" {
  mount = "secret"
  name  = "aws"
}

provider "aws" {
  region     = "us-east-1"
  access_key = data.vault_kv_secret_v2.aws_creds.data["access_key"]
  secret_key = data.vault_kv_secret_v2.aws_creds.data["secret_key"]
}
